#!/bin/bash

from=$1
to=$2
IFS=

#
# ability to log the messages to screen or file
#
DEBUG=
log="$HOME/datamelt.log"
echo "Log File - $log"
echo ""
echo "" > $log
date >> $log
log( ) {
  msg=$1
  if [[ ! -z "$DEBUG" ]]; then
    echo "$msg" >> $log
  else
    echo "$msg"
  fi
}

## Do not modify these variables
declare -a globbers=( "*.txt" "**/*.txt" "**/**/*.txt" "**/**/**/*.txt" "**/**/**/**/*.txt" )
foldercount=1000

#
# get the next filename and resets the line counter
#
nextFilename( ) {
  log "Starting nextFilename"

  nextFile=false
  for num in {1000..1000000}
  do
    log "num is $num"

    getFolders $foldercount
    testFile="$to$outputdir/$folders$foldercount.txt"

    if [ -f "$testFile" ]; then
      foldercount=$num
      # File exists
      continue
    else
      count=0
      foldercount=$(($num+1))
      nextFile="$testFile"
      break
    fi
  done
}

#
# create folder structure
#
getFolders( ) {
  log "Starting getFolders"

  local ss=$1
  s=${ss:0:3}
  declare -a a
  for ((i=0; i<${#s}; i++)); do a[$i]="${s:$i:1}"; done
  folders=$( printf '%s/' "${a[@]}" )
}

#
# Loop through the directories and get the files
#
getFiles( ) {
  for dd in "${globbers[@]}" ; do
    foldername=$from$dd
    log "$foldername"

    for d in $foldername; do
      if [[ ! -f $d ]]; then
        continue
      fi
      log "getfiles before nextfilename $d"
      nextFilename $from
      log "nextFilename is $nextFile"

      if [ "$nextFile" = false ]; then
        log "RAN OUT OF FILENAMES" 
        break 2
      fi

      mkdir -p "$to/$folders"
      # mv $d $nextFile

      log "MOVED $d to $nextFile" 

    done
  done
}


getFiles


# get the next folder
# get the next filename
# move and rename the file

log ""